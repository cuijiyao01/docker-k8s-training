apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-discovery
  namespace: logging
  labels:
    component: elasticsearch
spec:
  clusterIP: None
  selector:
    component: elasticsearch
  ports:
  - name: transport
    port: 9300
    targetPort: transport
    protocol: TCP
---
apiVersion: v1 
kind: Service
metadata:
  name: elasticsearch
  namespace: logging
  labels:
    component: elasticsearch
spec:
  selector:
    component: elasticsearch
  ports:
  - port: 9200
    name: data
    targetPort: http
  type: NodePort
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: elasticsearch-config
  namespace: logging
  labels:
    component: elasticsearch
data:
  elasticsearch.yml: |
    path:
      data: /usr/share/elasticsearch/data
      logs: /usr/share/elasticsearch/logs
    cluster:
      name: myesdb 
    node:
      master: true
      data: true
      name: ${NODE_NAME}
      ingest: true
    processors: ${PROCESSORS:1}
    network.host: _eth0_
    discovery.seed_hosts: elasticsearch-discovery
    cluster.initial_master_nodes: 
    - elasticsearch-0
    - elasticsearch-1
    xpack.ml.enabled: false
  log4j2.properties: |
    status = error
    appender.console.type = Console
    appender.console.name = console
    appender.console.layout.type = PatternLayout
    appender.console.layout.pattern = [%d{ISO8601}][%-5p][%-25c{1.}] [%node_name]%marker %m%n
    rootLogger.level = info
    rootLogger.appenderRef.console.ref = console
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
  namespace: logging
  labels:
    component: elasticsearch
spec:
  selector:
    matchLabels:
      component: elasticsearch
  serviceName: elasticsearch
  replicas: 2
  template:
    metadata:
      labels:
        component: elasticsearch
    spec:
      initContainers:
      - name: init-sysctl
        image: busybox:1.31.0
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      - name: "chown"
        image: docker.elastic.co/elasticsearch/elasticsearch:7.3.0
        command: ["/bin/sh", "-c", "chown -R elasticsearch:elasticsearch /usr/share/elasticsearch/data && chown -R elasticsearch:elasticsearch /usr/share/elasticsearch/logs"]
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data
          name: storage
      containers:
      - name: es-master
        image: docker.elastic.co/elasticsearch/elasticsearch:7.3.0
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: PROCESSORS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
        resources:
          requests:
            cpu: "0.25"
          limits:
            cpu: 1
        ports:
        - containerPort: 9300
          name: transport
        - containerPort: 9200
          name: http
        livenessProbe:
          tcpSocket:
            port: transport
          initialDelaySeconds: 300
          periodSeconds: 10
        volumeMounts:
        - name: elasticsearch-config
          mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          subPath: elasticsearch.yml
        - name: elasticsearch-config
          mountPath: /usr/share/elasticsearch/config/log4j2.properties
          subPath: log4j2.properties
        - name: storage
          mountPath: /usr/share/elasticsearch/data
      volumes:
      - name: elasticsearch-config
        configMap:
          name: elasticsearch-config
  volumeClaimTemplates:
  - metadata:
      name: storage
    spec:
      storageClassName: default
      accessModes: [ ReadWriteOnce ]
      resources:
        requests:
          storage: 2Gi
